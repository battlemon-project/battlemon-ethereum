name: CI
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  format:
    name: Checking formatting for whole project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check


  test:
    name: Setup testing environment and make tests
    runs-on: ubuntu-latest
    env:
      SQLX_VERSION: 0.6.3
      SQLX_DB_FEATURE: postgres
      TLS_FEATURE: native-tls
      CRATE_NAME: battlemon-ethereum
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_db
      POSTGRES_PORT: 5433
    services:
      postgres:
        ports:
          - ${POSTGRES_PORT}:5432
        image: postgres:15

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_DB_FEATURE }}-${{ env.TLS_FEATURE }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_DB_FEATURE }},${{ env.TLS_FEATURE }}
            --no-default-features
            --locked

      - name: Setup env for sqlx
        run: |
          export DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:${POSTGRES_PORT}/${POSTGRES_DB}

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          sqlx migrate run 


      - name: Check sqlx-data.json is up-to-date
        run: |
          cargo sqlx prepare -- --bin ${{ env.CRATE_NAME }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test


  docker:
    name: Build docker image and push it to Amazon ECR
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    env:
      AWS_REGION: "ap-southeast-1"
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::941572822749:role/ecr-github-actions
          role-session-name: ecr-github-actions-push-docker-image
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-push-ecr
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: battlemon-ethereum
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: .
          file: docker/project.Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{env.REGISTRY}}/${{env.REPOSITORY}}:latest